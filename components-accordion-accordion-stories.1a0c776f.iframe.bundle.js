"use strict";(self.webpackChunkloglines_component=self.webpackChunkloglines_component||[]).push([[8499],{"./src/components/accordion/accordion.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Test:()=>Test,__namedExportsOrder:()=>__namedExportsOrder,default:()=>accordion_stories});var form_input_component=__webpack_require__("./src/components/form-input/form-input.component.tsx"),tooltip_component=__webpack_require__("./src/components/tooltip/tooltip.component.tsx"),formik_esm=__webpack_require__("./node_modules/formik/dist/formik.esm.js"),react=__webpack_require__("./node_modules/react/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Accordion=_ref=>{let{items,header,onSearchSubmit}=_ref;const[openIndex,setOpenIndex]=(0,react.useState)(null),[search,setSearch]=(0,react.useState)(""),heightContent=onSearchSubmit?"h-[calc(100vh-20rem)] mobile:h-auto ":"h-full",formik=(0,formik_esm.Wx)({initialValues:{searchTerm:""},onSubmit:values=>{onSearchSubmit&&onSearchSubmit(values.searchTerm),setSearch(values.searchTerm)},validate:values=>{const errors={};return values.searchTerm.length<3&&0!==values.searchTerm.length&&(errors.searchTerm="Search term must be at least 3 characters"),errors}});return(0,jsx_runtime.jsxs)("div",{className:"".concat(heightContent),children:[onSearchSubmit&&(0,jsx_runtime.jsx)(formik_esm.QI,{value:formik,children:(0,jsx_runtime.jsx)("form",{className:"w-full flex justify-end mb-3",onSubmit:e=>{e.preventDefault(),formik.handleSubmit()},children:(0,jsx_runtime.jsx)(tooltip_component.A,{text:"Search term must be at least 3 characters",isShow:!!formik.errors.searchTerm,children:(0,jsx_runtime.jsx)(form_input_component.A,{autoComplete:"auto-off",hideError:!0,placeholder:"Seaarch",parentDivClassName:"w-full  mobile:min-w-0 mobile:w-full !mb-0",icon:"ri-search-line",name:"searchTerm",onKeyDown:event=>{"Backspace"===event.key&&1===formik.values.searchTerm.length&&(formik.values.searchTerm="",formik.handleSubmit())}})})})}),(0,jsx_runtime.jsxs)("div",{className:"border rounded h-full flex flex-col",children:[(0,jsx_runtime.jsx)("div",{className:" font-bold themes-text-gray-v5 p-3 border-b h-12",children:header}),(0,jsx_runtime.jsx)("div",{className:"overflow-auto",children:items.map(((item,index)=>{const iconAccordion=openIndex===index?"ri-arrow-down-s-line":"ri-arrow-up-s-line";return(0,jsx_runtime.jsxs)("div",{className:"border-b",children:[!search&&(0,jsx_runtime.jsxs)("button",{className:"flex items-center w-full text-left p-3 gap-3 focus:outline-none h-12",onClick:()=>(index=>{setOpenIndex(openIndex===index?null:index)})(index),children:[(0,jsx_runtime.jsx)("i",{className:"".concat(iconAccordion," text-size-XL")}),item.title]}),openIndex===index&&!search&&item.content.map((subitem=>(0,jsx_runtime.jsx)("div",{className:"border-t py-3 px-12",children:subitem.subContent}))),search&&item.content.map((subitem=>(0,jsx_runtime.jsx)("div",{className:"border-t p-3",children:subitem.subContent})))]},index)}))})]})]})},accordion_component=Accordion;Accordion.__docgenInfo={description:"",methods:[],displayName:"Accordion",props:{items:{required:!0,tsType:{name:"Array",elements:[{name:"IAccordionItem"}],raw:"IAccordionItem[]"},description:""},header:{required:!0,tsType:{name:"string"},description:""},onSearchSubmit:{required:!1,tsType:{name:"signature",type:"function",raw:"(search: string) => void",signature:{arguments:[{type:{name:"string"},name:"search"}],return:{name:"void"}}},description:""}}};const meta={title:"Components/Accordion",component:accordion_component,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{}},Test={args:{header:"Sample Header",items:[{content:[{subContent:(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:" Sub Content"}),subTitle:"sample sub title"}],title:"Title"}]}},accordion_stories=meta,__namedExportsOrder=["Test"];Test.parameters={...Test.parameters,docs:{...Test.parameters?.docs,source:{originalSource:"{\n  args: {\n    header: 'Sample Header',\n    items: [{\n      content: [{\n        subContent: <> Sub Content</>,\n        subTitle: 'sample sub title'\n      }],\n      title: 'Title'\n    }]\n  }\n}",...Test.parameters?.docs?.source}}}}}]);