/*! For license information please see components-checkbox-checkbox-stories.0684bcba.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkloglines_component=self.webpackChunkloglines_component||[]).push([[1127],{"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")},"./src/components/checkbox/checkbox.component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");function Checkbox(_ref){let{isChecked=!1,useFormik=!1,name,value,onChecked,disabled,variant="default",className,formikOnChange}=_ref;const[checked,setChecked]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{useFormik||setChecked(isChecked)},[isChecked,useFormik]);const checkboxVariant=`checkbox-${variant}`;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("input",{className:`rounded-logistical-radius-2 cursor-pointer loglines-checkbox themes-border-color ${checkboxVariant} ${className}`,type:"checkbox",checked:useFormik?isChecked:checked,name,disabled,onChange:e=>{const val=e.target.checked;useFormik&&formikOnChange?formikOnChange(e):(setChecked(val),onChecked&&onChecked(val))}})}const __WEBPACK_DEFAULT_EXPORT__=Checkbox;Checkbox.__docgenInfo={description:"",methods:[],displayName:"Checkbox",props:{name:{required:!1,tsType:{name:"string"},description:""},value:{required:!1,tsType:{name:"T"},description:""},isChecked:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},disabled:{required:!1,tsType:{name:"boolean"},description:""},className:{required:!1,tsType:{name:"string"},description:""},useFormik:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},variant:{required:!1,tsType:{name:"union",raw:"'default' | 'brand-inverse'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'brand-inverse'"}]},description:"",defaultValue:{value:"'default'",computed:!1}},onChecked:{required:!0,tsType:{name:"signature",type:"function",raw:"(data: T | boolean) => void",signature:{arguments:[{type:{name:"union",raw:"T | boolean",elements:[{name:"T"},{name:"boolean"}]},name:"data"}],return:{name:"void"}}},description:""},formikOnChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: ChangeEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ChangeEvent",elements:[{name:"HTMLInputElement"}],raw:"ChangeEvent<HTMLInputElement>"},name:"e"}],return:{name:"void"}}},description:""}}}},"./src/components/checkbox/checkbox.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const meta={title:"Components/Checkbox",component:__webpack_require__("./src/components/checkbox/checkbox.component.tsx").A,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{name:{control:"text"},value:{control:"text"},isChecked:{control:"boolean"},disabled:{control:"boolean"},className:{control:"text"},useFormik:{control:"boolean"},variant:{control:"select",options:["default","brand-inverse"]},onChecked:{action:"checked"},formikOnChange:{action:"formikChanged"}}},Default={args:{name:"defaultCheckbox",value:"Option A",isChecked:!1,disabled:!1,className:"",useFormik:!1,variant:"default",onChecked:()=>{}}},Disabled={args:{name:"disabledCheckbox",value:"Option C",isChecked:!1,disabled:!0,variant:"default",onChecked:()=>{}}},__WEBPACK_DEFAULT_EXPORT__=meta,__namedExportsOrder=["Default","Disabled"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    name: 'defaultCheckbox',\n    value: 'Option A',\n    isChecked: false,\n    disabled: false,\n    className: '',\n    useFormik: false,\n    variant: 'default',\n    onChecked: () => {}\n  }\n}",...Default.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    name: 'disabledCheckbox',\n    value: 'Option C',\n    isChecked: false,\n    disabled: true,\n    variant: 'default',\n    onChecked: () => {}\n  }\n}",...Disabled.parameters?.docs?.source}}}}}]);