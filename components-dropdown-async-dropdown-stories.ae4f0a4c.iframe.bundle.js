"use strict";(self.webpackChunkloglines_component=self.webpackChunkloglines_component||[]).push([[3066],{"./src/components/dropdown-async/dropdown.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,Multiple:()=>Multiple,__namedExportsOrder:()=>__namedExportsOrder,default:()=>dropdown_stories});var react=__webpack_require__("./node_modules/react/index.js"),index_641ee5b8_esm=__webpack_require__("./node_modules/react-select/dist/index-641ee5b8.esm.js"),react_select_async_esm=__webpack_require__("./node_modules/react-select/async/dist/react-select-async.esm.js"),debounce=__webpack_require__("./node_modules/lodash/debounce.js"),debounce_default=__webpack_require__.n(debounce),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function DropdownAsync(_ref){var _props$label,_props$maxMenuHeight;let{isClearable=!1,isSearchable=!0,isMultiSelect=!1,required=!1,dropDownIndicator=!1,isLoading=!1,disabled=!1,options,borderColorClassName,heightInput=30,labelDivClassname,variant,styleBorderColorDefault,styleBorderColorOnFocus,styleCheckboxColor,styleIndicatorColorDefault,styleIndicatorColorFocus,styleMenuBorderColor,styleOptionHoverBgColor,styleOptionSelectedBgColor,styleOptionTextColor,styleSelectedTextColorDefault,classNameLabelBgColorDefault,classNameLabelBgColorDisabled,classNameLabelColorDefault,classNameLabelColorFocus,...props}=_ref;const[isFocus,setIsFocus]=(0,react.useState)(!1),isRequired=required?"required":"",disableClassname=disabled?"disabled":"",dataTestIdComponent=props.dataTestId?`${props.dataTestId}_DROPDOWN`:"",dropdownValue=null!=props&&props.value||props.defaultValue?null==props?void 0:props.value:null,borderColorOnFocus=null!=styleBorderColorOnFocus?styleBorderColorOnFocus:"var(--loglines-brand-v5)",borderColorDefault=null!=styleBorderColorDefault?styleBorderColorDefault:"var(--loglines-gray-v2)",checkboxColor=null!=styleCheckboxColor?styleCheckboxColor:"var(--loglines-brand-v5)",selectedTextColorDefault=null!=styleSelectedTextColorDefault?styleSelectedTextColorDefault:"var(--loglines-gray-v7)",optionHoverBgColor=null!=styleOptionHoverBgColor?styleOptionHoverBgColor:"var(--loglines-gray-v1)",optionSelectedBgColor=null!=styleOptionSelectedBgColor?styleOptionSelectedBgColor:"var(--loglines-brand-v2)",optionTextColor=null!=styleOptionTextColor?styleOptionTextColor:"var(--loglines-gray-v6)",menuBorderColor=null!=styleMenuBorderColor?styleMenuBorderColor:"var(--loglines-gray-v3)",indicatorColorDefault=null!=styleIndicatorColorDefault?styleIndicatorColorDefault:"var(--loglines-gray-v3)",indicatorColorFocus=null!=styleIndicatorColorFocus?styleIndicatorColorFocus:"var(--loglines-gray-v5)",labelColor=isFocus?null!=classNameLabelColorFocus?classNameLabelColorFocus:"themes-text-brand-v5":null!=classNameLabelColorDefault?classNameLabelColorDefault:"themes-text-gray-v5",labelBgGolor=disabled?null!=classNameLabelBgColorDisabled?classNameLabelBgColorDisabled:"themes-text-brand-v5":null!=classNameLabelBgColorDefault?classNameLabelBgColorDefault:"themes-text-brand-v5";isLoading&&(options=[{value:"loading",label:"Loading Data"}]);const onFocus=state=>(setIsFocus(state),disabled?borderColorDefault:state?borderColorOnFocus:borderColorDefault),customStyles={control:(base,state)=>(state.isFocused!==isFocus&&setIsFocus(state.isFocused),{...base,height:heightInput||"100%",display:"flex",alignItems:"center",overflow:"hidden",boxShadow:"none",outline:"none",borderColor:onFocus(state.isFocused),"&:hover":{borderColor:state.isFocused?borderColorOnFocus:borderColorDefault},borderWidth:1,cursor:"pointer"}),option:(base,_ref2)=>{let{isSelected}=_ref2;return{...base,backgroundColor:isSelected?optionSelectedBgColor:"inherit",cursor:"pointer","&:hover":{backgroundColor:isSelected?optionSelectedBgColor:optionHoverBgColor},color:optionTextColor,paddingTop:"4px",paddingBottom:"4px",marginRight:""}},menuList:base=>({...base,borderWidth:1,borderColor:menuBorderColor,borderRadius:"5px"}),dropdownIndicator:(base,state)=>({...base,color:state.isFocused?indicatorColorFocus:indicatorColorDefault,"&:hover":{color:state.isFocused?indicatorColorFocus:indicatorColorDefault},transform:state.selectProps.menuIsOpen?"rotate(180deg)":"",transition:"transform 0.3s ease-in-out"}),indicatorSeparator:(base,state)=>({...base,backgroundColor:state.isFocused?indicatorColorFocus:indicatorColorDefault}),clearIndicator:(base,state)=>({...base,color:state.isFocused?indicatorColorFocus:indicatorColorDefault,"&:hover":{color:state.isFocused?indicatorColorFocus:indicatorColorDefault},cursor:"pointer"}),singleValue:base=>({...base,color:selectedTextColorDefault}),input:base=>({...base,margin:0,padding:0,width:0,minWidth:0,maxWidth:0})},debouncedLoadOptions=(0,react.useMemo)(()=>{const load=props.loadOptions||(()=>Promise.resolve([]));return debounce_default()((inputValue,callback)=>{load(inputValue).then(callback)},500)},[props.loadOptions]);return(0,jsx_runtime.jsxs)("div",{className:`dropdownParent-style2 css-dropdown-container\n                ${borderColorClassName}\n                ${props.parentDivClassname} \n                dropdownParent-style ${disableClassname}\n                css-dropdown-container\n            `,children:[(0,jsx_runtime.jsx)("label",{className:`${labelBgGolor} ${props.label?"":"hidden"}`,children:(0,jsx_runtime.jsx)("div",{className:"dropdownLabelDiv-style css-dropdown-label-div flex ",children:(0,jsx_runtime.jsx)("p",{className:`${isRequired} ${labelDivClassname} ${labelColor} `,children:props.useUppercaseLabel?null===(_props$label=props.label)||void 0===_props$label?void 0:_props$label.toUpperCase():props.label})})}),(0,jsx_runtime.jsx)(react_select_async_esm.A,{className:`${props.className}`,placeholder:props.placeholder,loadOptions:debouncedLoadOptions,closeMenuOnSelect:!isMultiSelect,styles:customStyles,isClearable,isMulti:isMultiSelect,isSearchable,isDisabled:disabled,hideSelectedOptions:!1,value:dropdownValue,components:{Option:optionProps=>null!=props&&props.customOptionComponent?null==props?void 0:props.customOptionComponent(optionProps):isMultiSelect?(optionProps=>{const isSelected=optionProps.isSelected;return(0,jsx_runtime.jsx)(index_641ee5b8_esm.c.Option,{...optionProps,children:(0,jsx_runtime.jsxs)("div",{className:"flex items-center gap-4",children:[(0,jsx_runtime.jsx)("span",{style:{display:"inline-flex",width:16,height:16,borderRadius:4,justifyContent:"center",alignItems:"center",flexShrink:0,borderColor:isSelected?void 0:borderColorDefault,borderWidth:isSelected?void 0:"1px",background:isSelected?"white":void 0},children:isSelected&&(0,jsx_runtime.jsx)("svg",{width:"12",height:"12",viewBox:"0 0 24 24",fill:"none",stroke:checkboxColor,strokeWidth:"3",strokeLinecap:"round",strokeLinejoin:"round",children:(0,jsx_runtime.jsx)("polyline",{points:"20 6 9 17 4 12"})})}),(0,jsx_runtime.jsx)("div",{children:optionProps.label})]})})})(optionProps):(optionProps=>{let dataTestId="";if(dataTestIdComponent){var _optionProps$innerPro,_optionProps$innerPro2;const sequenceNumber=Number(null==optionProps||null===(_optionProps$innerPro=optionProps.innerProps)||void 0===_optionProps$innerPro||null===(_optionProps$innerPro2=_optionProps$innerPro.id)||void 0===_optionProps$innerPro2?void 0:_optionProps$innerPro2.split("-").pop())+1||0;dataTestId=sequenceNumber<=5?`${dataTestIdComponent}_OPTION_${sequenceNumber}`:""}return(0,jsx_runtime.jsx)("div",{"data-testid":dataTestId,children:(0,jsx_runtime.jsx)(index_641ee5b8_esm.c.Option,{...optionProps})})})(optionProps),MultiValue:props=>{var _selectedItems$;const selectedItems=props.getValue(),count=selectedItems.length;return(null===(_selectedItems$=selectedItems[0])||void 0===_selectedItems$?void 0:_selectedItems$.value)===props.data.value?(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:count>0&&""===props.selectProps.inputValue&&(0,jsx_runtime.jsxs)("div",{className:"absolute left-[10px] top-1/2 -translate-y-1/2 themes-text-gray-v6 pointer-events-none",children:[count," selected item",count>1?"s":""]})}):null}},onChange:e=>{var _e$additionalData;props.onClick&&props.onClick(e),props.additionalDataHandling&&props.additionalDataHandling(null!==(_e$additionalData=null==e?void 0:e.additionalData)&&void 0!==_e$additionalData?_e$additionalData:null)},backspaceRemovesValue:!1,defaultOptions:!0,options:function reorderOptions(opt){if(!isMultiSelect)return opt;const val=props.value;if(!opt)return;if(!val)return opt;const selectedSet=new Set(val.map(opt=>opt.value));return[...opt.filter(opt=>selectedSet.has(opt.value)),...opt.filter(opt=>!selectedSet.has(opt.value))]}(options),maxMenuHeight:null!==(_props$maxMenuHeight=props.maxMenuHeight)&&void 0!==_props$maxMenuHeight?_props$maxMenuHeight:115,menuPosition:props.menuPosition})]})}const dropdown_async_component=DropdownAsync;DropdownAsync.__docgenInfo={description:"",methods:[],displayName:"DropdownAsync",props:{required:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},label:{required:!1,tsType:{name:"string"},description:""},isCreate:{required:!1,tsType:{name:"boolean"},description:""},onCreateOption:{required:!1,tsType:{name:"signature",type:"function",raw:"(input: string) => void",signature:{arguments:[{type:{name:"string"},name:"input"}],return:{name:"void"}}},description:""},heightInput:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"30",computed:!1}},options:{required:!1,tsType:{name:"Array",elements:[{name:"IDropdownItem",elements:[{name:"T"}],raw:"IDropdownItem<T>"}],raw:"IDropdownItem<T>[]"},description:""},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: IDropdownItem<T> | IDropdownItem<T>[] | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"IDropdownItem<T> | IDropdownItem<T>[] | undefined",elements:[{name:"IDropdownItem",elements:[{name:"T"}],raw:"IDropdownItem<T>"},{name:"Array",elements:[{name:"IDropdownItem",elements:[{name:"T"}],raw:"IDropdownItem<T>"}],raw:"IDropdownItem<T>[]"},{name:"undefined"}]},name:"value"}],return:{name:"void"}}},description:""},additionalDataHandling:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: T | null) => void",signature:{arguments:[{type:{name:"union",raw:"T | null",elements:[{name:"T"},{name:"null"}]},name:"value"}],return:{name:"void"}}},description:""},className:{required:!1,tsType:{name:"string"},description:""},parentDivClassname:{required:!1,tsType:{name:"string"},description:""},labelDivClassname:{required:!1,tsType:{name:"string"},description:""},placeholder:{required:!1,tsType:{name:"string"},description:""},selectedItem:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: IDropdownItem<T> | IDropdownItem<T>[]) => void",signature:{arguments:[{type:{name:"union",raw:"IDropdownItem<T> | IDropdownItem<T>[]",elements:[{name:"IDropdownItem",elements:[{name:"T"}],raw:"IDropdownItem<T>"},{name:"Array",elements:[{name:"IDropdownItem",elements:[{name:"T"}],raw:"IDropdownItem<T>"}],raw:"IDropdownItem<T>[]"}]},name:"value"}],return:{name:"void"}}},description:""},readonly:{required:!1,tsType:{name:"boolean"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},isLoading:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},isClearable:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},isSearchable:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},onInputChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""},dropDownIndicator:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},selectedProps:{required:!1,tsType:{name:"IDropdownItem"},description:""},value:{required:!1,tsType:{name:"union",raw:"IDropdownItem<T> | IDropdownItem<T>[] | null",elements:[{name:"IDropdownItem",elements:[{name:"T"}],raw:"IDropdownItem<T>"},{name:"Array",elements:[{name:"IDropdownItem",elements:[{name:"T"}],raw:"IDropdownItem<T>"}],raw:"IDropdownItem<T>[]"},{name:"null"}]},description:""},isMultiSelect:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},isChip:{required:!1,tsType:{name:"boolean"},description:""},useBorder:{required:!1,tsType:{name:"boolean"},description:""},isAsync:{required:!1,tsType:{name:"boolean"},description:""},loadOptions:{required:!1,tsType:{name:"any"},description:""},defaultValue:{required:!1,tsType:{name:"Array",elements:[{name:"IDropdownItem",elements:[{name:"T"}],raw:"IDropdownItem<T>"}],raw:"IDropdownItem<T>[]"},description:""},onChange:{required:!1,tsType:{name:"any"},description:""},borderColorClassName:{required:!1,tsType:{name:"string"},description:""},customOptionComponent:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n    props: OptionProps<IDropdownItem<T>>\n) => JSX.Element",signature:{arguments:[{type:{name:"OptionProps",elements:[{name:"IDropdownItem",elements:[{name:"T"}],raw:"IDropdownItem<T>"}],raw:"OptionProps<IDropdownItem<T>>"},name:"props"}],return:{name:"JSX.Element"}}},description:""},customMenuComponent:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: MenuListProps<any>) => JSX.Element",signature:{arguments:[{type:{name:"MenuListProps",elements:[{name:"any"}],raw:"MenuListProps<any>"},name:"props"}],return:{name:"JSX.Element"}}},description:""},useUppercaseLabel:{required:!1,tsType:{name:"boolean"},description:""},variant:{required:!1,tsType:{name:"union",raw:"| 'berge-default'\n| 'berge-positive'\n| 'berge-caution'\n| 'berge-negative'\n| 'berge-active'\n| 'berge-disabled'\n| 'berge-selected'",elements:[{name:"literal",value:"'berge-default'"},{name:"literal",value:"'berge-positive'"},{name:"literal",value:"'berge-caution'"},{name:"literal",value:"'berge-negative'"},{name:"literal",value:"'berge-active'"},{name:"literal",value:"'berge-disabled'"},{name:"literal",value:"'berge-selected'"}]},description:""},disabledVariant:{required:!1,tsType:{name:"union",raw:"'white' | 'gray'",elements:[{name:"literal",value:"'white'"},{name:"literal",value:"'gray'"}]},description:""},dataTestId:{required:!1,tsType:{name:"string"},description:""},defaultOptions:{required:!1,tsType:{name:"union",raw:"boolean | IDropdownItem<T>[]",elements:[{name:"boolean"},{name:"Array",elements:[{name:"IDropdownItem",elements:[{name:"T"}],raw:"IDropdownItem<T>"}],raw:"IDropdownItem<T>[]"}]},description:""},menuPortalTarget:{required:!1,tsType:{name:"union",raw:"HTMLElement | null",elements:[{name:"HTMLElement"},{name:"null"}]},description:""},styleBorderColorOnFocus:{required:!1,tsType:{name:"string"},description:""},styleBorderColorDefault:{required:!1,tsType:{name:"string"},description:""},styleCheckboxColor:{required:!1,tsType:{name:"string"},description:""},styleSelectedTextColorDefault:{required:!1,tsType:{name:"string"},description:""},styleOptionHoverBgColor:{required:!1,tsType:{name:"string"},description:""},styleOptionSelectedBgColor:{required:!1,tsType:{name:"string"},description:""},styleOptionTextColor:{required:!1,tsType:{name:"string"},description:""},styleMenuBorderColor:{required:!1,tsType:{name:"string"},description:""},styleIndicatorColorDefault:{required:!1,tsType:{name:"string"},description:""},styleIndicatorColorFocus:{required:!1,tsType:{name:"string"},description:""},classNameLabelColorFocus:{required:!1,tsType:{name:"string"},description:""},classNameLabelColorDefault:{required:!1,tsType:{name:"string"},description:""},classNameLabelBgColorDisabled:{required:!1,tsType:{name:"string"},description:""},classNameLabelBgColorDefault:{required:!1,tsType:{name:"string"},description:""},maxMenuHeight:{required:!1,tsType:{name:"number"},description:""},menuPosition:{required:!1,tsType:{name:"union",raw:"'absolute' | 'fixed'",elements:[{name:"literal",value:"'absolute'"},{name:"literal",value:"'fixed'"}]},description:""}}};const dropdown_stories={title:"components/DropdownAsync",component:dropdown_async_component,tags:["autodocs"]},Default={args:{label:"Select Data",isSearchable:!0,isClearable:!0},render:args=>{const[selected,setSelected]=(0,react.useState)(),[initialOptions,setInitialOptions]=(0,react.useState)(),loadOptions=async inputValue=>{const filter=inputValue?"?username="+inputValue:"",res=await fetch("https://jsonplaceholder.typicode.com/users"+filter);return(await res.json()).map(d=>({label:d.username,value:d.id}))};return(0,react.useEffect)(()=>{(async()=>{const initialOptions=await loadOptions();setInitialOptions(initialOptions)})()},[]),(0,jsx_runtime.jsx)(dropdown_async_component,{value:selected,onClick:data=>{setSelected(data)},loadOptions:async value=>await loadOptions(value),options:initialOptions,defaultOptions:!0,...args})}},Multiple={args:{label:"Select Data",options:[{label:"Peterpan",value:"peterpan"},{label:"ACDC",value:"ACFC"},{label:"Paramore",value:"Paramore"},{label:"MCR",value:"MCR"}],isSearchable:!0,isClearable:!0,isMultiSelect:!0,placeholder:"Select Item"},render:args=>{const[selected,setSelected]=(0,react.useState)(),[initialOptions,setInitialOptions]=(0,react.useState)(),loadOptions=async inputValue=>{const filter=inputValue?"?username="+inputValue:"",res=await fetch("https://jsonplaceholder.typicode.com/users"+filter),retData=(await res.json()).map(d=>({label:d.username,value:d.id}));return console.log(retData),retData};return(0,react.useEffect)(()=>{(async()=>{const initialOptions=await loadOptions();setInitialOptions(initialOptions)})()},[]),(0,jsx_runtime.jsx)(dropdown_async_component,{value:selected,onClick:data=>{setSelected(data)},loadOptions:async value=>await loadOptions(value),options:initialOptions,defaultOptions:!0,...args})}},Disabled={args:{label:"Select Data",options:[{label:"Peterpan",value:"peterpan"},{label:"ACDC",value:"ACFC"},{label:"Paramore",value:"Paramore"},{label:"MCR",value:"MCR"}],placeholder:"Select Item",isSearchable:!0,isClearable:!0,disabled:!0}},__namedExportsOrder=["Default","Multiple","Disabled"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Select Data',\n    isSearchable: true,\n    isClearable: true\n  },\n  render: args => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [selected, setSelected] = useState<IDropdownItem | undefined>();\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [initialOptions, setInitialOptions] = useState<IDropdownItem<any>[] | undefined>();\n    const loadOptions = async (inputValue?: string) => {\n      const filter = !inputValue ? '' : '?username=' + inputValue;\n      const res = await fetch('https://jsonplaceholder.typicode.com/users' + filter);\n      const users = await res.json();\n      const retData: IDropdownItem[] = users.map((d: any) => ({\n        label: d.username,\n        value: d.id\n      }));\n      return retData;\n    };\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      ;\n      (async () => {\n        const initialOptions = await loadOptions();\n        setInitialOptions(initialOptions);\n      })();\n    }, []);\n    return <DropdownAsync<any> value={selected} onClick={data => {\n      const dt = data as IDropdownItem | undefined;\n      setSelected(dt);\n    }} loadOptions={async (value: string) => {\n      return await loadOptions(value);\n    }} options={initialOptions} defaultOptions={true} {...args} />;\n  }\n}",...Default.parameters?.docs?.source}}},Multiple.parameters={...Multiple.parameters,docs:{...Multiple.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Select Data',\n    options: [{\n      label: 'Peterpan',\n      value: 'peterpan'\n    }, {\n      label: 'ACDC',\n      value: 'ACFC'\n    }, {\n      label: 'Paramore',\n      value: 'Paramore'\n    }, {\n      label: 'MCR',\n      value: 'MCR'\n    }],\n    isSearchable: true,\n    isClearable: true,\n    isMultiSelect: true,\n    placeholder: 'Select Item'\n  },\n  render: args => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [selected, setSelected] = useState<IDropdownItem | undefined>();\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [initialOptions, setInitialOptions] = useState<IDropdownItem<any>[] | undefined>();\n    const loadOptions = async (inputValue?: string) => {\n      const filter = !inputValue ? '' : '?username=' + inputValue;\n      const res = await fetch('https://jsonplaceholder.typicode.com/users' + filter);\n      const users = await res.json();\n      const retData: IDropdownItem[] = users.map((d: any) => ({\n        label: d.username,\n        value: d.id\n      }));\n      console.log(retData);\n      return retData;\n    };\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      ;\n      (async () => {\n        const initialOptions = await loadOptions();\n        setInitialOptions(initialOptions);\n      })();\n    }, []);\n    return <DropdownAsync<any> value={selected} onClick={data => {\n      const dt = data as IDropdownItem | undefined;\n      setSelected(dt);\n    }} loadOptions={async (value: string) => {\n      return await loadOptions(value);\n    }} options={initialOptions} defaultOptions={true} {...args} />;\n  }\n}",...Multiple.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Select Data',\n    options: [{\n      label: 'Peterpan',\n      value: 'peterpan'\n    }, {\n      label: 'ACDC',\n      value: 'ACFC'\n    }, {\n      label: 'Paramore',\n      value: 'Paramore'\n    }, {\n      label: 'MCR',\n      value: 'MCR'\n    }],\n    placeholder: 'Select Item',\n    isSearchable: true,\n    isClearable: true,\n    disabled: true\n  }\n}",...Disabled.parameters?.docs?.source}}}}}]);