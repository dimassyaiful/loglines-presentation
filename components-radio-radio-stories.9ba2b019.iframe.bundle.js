/*! For license information please see components-radio-radio-stories.9ba2b019.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkloglines_component=self.webpackChunkloglines_component||[]).push([[3267],{"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")},"./src/components/radio/radio.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Checked:()=>Checked,Default:()=>Default,Disabled:()=>Disabled,__namedExportsOrder:()=>__namedExportsOrder,default:()=>radio_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function Radio(_ref){let{useFormik=!1,name,value,onChecked,disabled,className,formikOnChange,isChecked}=_ref;return(0,jsx_runtime.jsx)("input",{className:"cursor-pointer loglines-radio themes-border-color ".concat(className),value,type:"radio",name,disabled,onChange:e=>{const val=e.target.value;useFormik&&formikOnChange?formikOnChange(e):onChecked&&onChecked(val)},checked:isChecked})}const radio_component=Radio;Radio.__docgenInfo={description:"",methods:[],displayName:"Radio",props:{name:{required:!1,tsType:{name:"string"},description:""},label:{required:!1,tsType:{name:"string"},description:""},value:{required:!1,tsType:{name:"string"},description:""},isChecked:{required:!1,tsType:{name:"boolean"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},className:{required:!1,tsType:{name:"string"},description:""},useFormik:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},onChecked:{required:!1,tsType:{name:"signature",type:"function",raw:"(data: T | string) => void",signature:{arguments:[{type:{name:"union",raw:"T | string",elements:[{name:"T"},{name:"string"}]},name:"data"}],return:{name:"void"}}},description:""},formikOnChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: ChangeEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ChangeEvent",elements:[{name:"HTMLInputElement"}],raw:"ChangeEvent<HTMLInputElement>"},name:"e"}],return:{name:"void"}}},description:""}}};const radio_stories={title:"Components/Radio",component:radio_component,tags:["autodocs"]},Default={args:{name:"example",label:"Option 1",value:"option1",isChecked:!1,disabled:!1,onChecked:val=>console.log("Checked:",val)}},Checked={args:{name:"example",label:"Option 2",value:"option2",isChecked:!0,disabled:!1,onChecked:val=>console.log("Checked:",val)}},Disabled={args:{name:"example",label:"Option 3 (Disabled)",value:"option3",isChecked:!1,disabled:!0,onChecked:val=>console.log("Checked:",val)}},__namedExportsOrder=["Default","Checked","Disabled"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    name: 'example',\n    label: 'Option 1',\n    value: 'option1',\n    isChecked: false,\n    disabled: false,\n    onChecked: val => console.log('Checked:', val)\n  }\n}",...Default.parameters?.docs?.source}}},Checked.parameters={...Checked.parameters,docs:{...Checked.parameters?.docs,source:{originalSource:"{\n  args: {\n    name: 'example',\n    label: 'Option 2',\n    value: 'option2',\n    isChecked: true,\n    disabled: false,\n    onChecked: val => console.log('Checked:', val)\n  }\n}",...Checked.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    name: 'example',\n    label: 'Option 3 (Disabled)',\n    value: 'option3',\n    isChecked: false,\n    disabled: true,\n    onChecked: val => console.log('Checked:', val)\n  }\n}",...Disabled.parameters?.docs?.source}}}}}]);